alpha<- 0.05
z.half.alpha<- qnorm(1-alpha/2)
c(-z.half.alpha,z.half.alpha) #standard normal is symmetric around 0
#the z statistic lies between -1.96 and 1.96 so we cannot reject the null
#fo this z statistic need the approximation that np and n(1-p) are both
#greater than 5
#Z-test can do in alternative way
prop.test(90, 200, p = 0.5, correct = T)
#p-value is 0.1791 so we cannot reject the null
#the sample estimate is also in the confidence intervals
##Exercise 10
#a, pg 18
binom.test(35, 95, p = 0.33, alternative = "two.sided", conf.level = 0.95)
#two-sided as we don't know the direction above or below
#we cannot reject the null hypothesis
#so it looks like a third of all students will probs get an A
#b
binom.test(45, 110, p = 0.5, alternative = "two.sided", conf.level = 0.95)
#p-value = 0.07 so we cannot reject the null
# would maybe want a bigger sample size before we convincingly say half of
#students fail an exam
#c
binom.test(50, 300, p = 0.2, alternative = "two.sided", conf.level = 0.95)
#p-value = 0.17 so cannot reject the null
####Hypothesis test for a difference between two proportions
y1 <- 40
n1 <- 110
y2 <- 20
n2 <- 90
p1 <- y1/n1
p2 <- y2/n2
phat <- (y1 + y2)/ (n1 + n2)
z <- (p1-p2)/(sqrt(phat*(1-phat)*(1/n1+1/n2)))
z
alpha<-0.05 # the significance level
z.half.alpha<-qnorm(1-alpha/2)
c(-z.half.alpha,z.half.alpha) #standard normal is symmetric around 0
#the test statistic (2.17) does not lie between -1.96 and 1.96 so we can
#reject the null hypothesis
#to do this we need to test that np and n(1-p) are greater than or equal to
#5 for both for groups
#the alternative way
prop.test(x = c(40, 20), n = c(110, 90), correct = T)
#x values are the number with the certain out come i.e., are smokers
#n is the number in each sample
#correct = T says we should do a continuity correction
#The p-value is less than 0.05 so we can reject the null hypothesis
##Exercise 11
#a
prop.test(x = c(35, 40), n = c(95, 60), correct = T)
#p-value is 0.00055 which is less than 0.05 so we can rekect the null hypothesis
#so, we think they are not equal
#b
prop.test(x = c(5, 45), n = c(80, 110), correct = T, alternative = "less")
#alternative = less says we think the first one is lower than the second
#the p-value is 1.053e-07 which less than 0.05 so we can reject null
#and predict the first numbers are lower
#c
prop.test(x = c(100, 50), n = c(150, 300), correct = T, alternative = "greater")
#alternative = greater says we think the first one is lower than the second
#p-value is 2.2e-16 whihc less than 0.05 so we can reject the null
#and predict the first number is higher
#Hypothesis test for comparing counts in contingency tables
#to cehck if two variables (e.g., A and B) are independent from each other
#i.e., knowing level of variable A does not help predict B
#making the initial table
Blue_Eyes<- c(38, 14, 52) #create first column
Brown_Eyes<- c(11, 51, 62) #create second column
Row_Totals<- c(49, 65, 114) #third column
Table_1<- cbind(Blue_Eyes, Brown_Eyes, Row_Totals)#combine the columns
row.names(Table_1)<- c("Fair_Hair", "Dark_Hair", "Column_Totals") #give names to rows
Table_1
#under null hypothesis the two variables are assumed to be independent
#for example, we could calculate the probability if independent of having dark
#fair hair and brown eyes as 65/114 * 62/114 = 0.31
#Calculating the probabilities
Blue_Eyes<- c((49/114)*(52/114), (65/114)*(52/114), 52) #create first column
Brown_Eyes<- c((49/114)*(62/114), (65/114)*(62/114), 62) #create second column
Row_Totals<- c(49,65,114) #third column
Table_2=cbind(Blue_Eyes,Brown_Eyes,Row_Totals)#combine the columns
row.names(Table_2)<- c("Fair_Hair", "Dark_Hair", "Column_Totals")#give names to rows
Table_2
#EXPLANATION -yes, they are all calculated by doing multiplying the products
#as we assume they are independent
##Calculating the expected frequencies
Blue_Eyes<- c(114*(49/114)*(52/114), 114*(65/114)*(52/114), 52) #create first column
Brown_Eyes<- c(114*(49/114)*(62/114), 114*(65/114)*(62/114), 62) #create second column
Row_Totals<- c(49,65,114) #third column
Table_3<- cbind(Blue_Eyes, Brown_Eyes, Row_Totals)#combine the columns
row.names(Table_3)<- c("Fair_Hair", "Dark_Hair", "Column_Totals")#give names to rows
Table_3
#using the independent probabilties to calculate the expected frequencies
#Now take the observed frequencies and expected frequencies and calclulate using
#(O-E)^2/ E
#thus, to create the table
FairHair_And_BlueEyes<- c(38, 22.35, (38-22.35)^2/22.35)
FairHair_And_BrownEyes<- c(11, 26.65, (11-26.65)^2/26.65)
DarkHair_And_BlueEyes<- c(14, 29.65, (14-29.65)^2/29.65)
DarkHair_And_BrownEyes<- c(51, 35.35, (51-35.35)^2/35.35)
Table_4<- rbind(FairHair_And_BlueEyes, FairHair_And_BrownEyes, DarkHair_And_BlueEyes, DarkHair_And_BrownEyes)
colnames(Table_4)<- c("O", "E", "(O-E)^2/E")
Table_4
#sum all of them to get chi squared value
chi_sq = sum(10.96, 9.19, 8.26, 6.93)
chi_sq
#Now, we calculate the critical value
qchisq(0.95, 1) #or we can use qchisq(0.05, 1, lower.tail = F) from workshop 2
#The chi-sq value is larger than critical value, thus cannot accept null
#they probably are dependent
##easier way to do this in R]
count<- matrix(c(38,14,11,51), nrow=2) #create the matrix with the observed frequencies
count
chisq.test(count, correct=F) #chi-square test without Yatesâ€™s continuity correction
#p-value is very small 2.778e-09 which is lower than 0.05
#so we can reject the null that they are independent
##Exercise 12
#a
#count <- matrix(c())
count <- matrix(c(35, 98, 25, 90), nrow = 2)
count2 <- matrix(c(35, 98, 25, 90), nrow = 2)
count2
chisq.test(count2, correct = F)
count3 <- matrix(c(5, 25, 6, 59), nrow = 2)
count3
chisq.test(count3, correct = F)
chisq.test(count2, correct = F)
count3 <- matrix(c(5, 25, 6, 59), nrow = 2)
count3
chisq.test(count3, correct = F)
count4 <- matrix(c(50, 20, 40, 10), nrow = 2)
count4
count4 <- matrix(c(50, 20, 40, 10), nrow = 2)
count4
chisq.test(count4, correct = F)
Blue_Eyes<- c(6, 2, 8) #create first column
Brown_Eyes<- c(4, 8, 12) #create second column
Row_Totals<- c(10, 10, 20) #third column
Table_5<- cbind(Blue_Eyes, Brown_Eyes, Row_Totals)#combine the columns
row.names(Table_5)<- c("Fair_Hair", "Dark_Hair", "Column_Totals")#give names to rows
Table_5
x <- matrix(c(6, 2, 4, 8), ncol = 2)
x
fisher.test(x)
count5 <- matrix(c(5, 3, 8, 2), ncol = 2)
count5
count5 <- matrix(c(5, 3, 8, 2), nrow = 2)
count5
count5 <- matrix(c(5, 8, 3, 2), nrow = 2)
count5
fisher.test(count5)
count6 <- matrix(c(2, 1, 3, 2), nrow = 2)
count6
fisher.test(count6)
count7 <- matrix(c(5, 2, 4, 10), nrow = 2)
count7
fisher.test(count7)
library(ggplot2)
system.file(package='ggplot2')
install.packages("ggplot2")
R.version()
R.Version()
update.packages()
install.packages("ggplot2")
library(ggplot2)
install.packages("Rtools")
install.packages("installr")
library(installr)
sessionInfo()
install("ggplot2")
install("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
y <- c(13, 7, 5, 12, 9, 15, 6, 11, 9, 7, 12)
y - mean(y)
variance(y)
var(y)
View(data2)
library("ggplot2")
df <- read.csv('UCL_bar.csv')
View(yields)
packageVersion("dplyr")
packageVersion("stringr")
packageVersion("bacollite")
R.version()
R.Version()
file.path(R.home(), "bin", "R")
file.path(R.home(), "bin", "Rscript.exe")
which R
file.path(R.home())
file.path(R.home("bin"), "R")
file.path(R.home(), "bin", "Rscript.exe")
Rscript()
full_filepath <- file.path(R.home(), "bin", "Rscript.exe")
print(full_filepath)
##################
# MES_graphs.R
##################
library(dplyr)
library(stringr)
library(tidyr)
library(ggplot2)
library(grid)
library(gridExtra)
MES_diff_df <- read.csv("final_results/MES_final_results.csv")
setwd("C:/Users/tobyl/OneDrive - The University of Manchester/Bioinformatics Masters/Research Project 2/development/RP2_gutFBA/first_model")
##################
# MES_graphs.R
##################
library(dplyr)
library(stringr)
library(tidyr)
library(ggplot2)
library(grid)
library(gridExtra)
MES_diff_df <- read.csv("final_results/MES_final_results.csv")
MES_diff_df <- MES_diff_df %>%
drop_na() %>%
filter(str_detect(metabolite_id, '_rl_', negate = TRUE))
top10_MES_CRC <-  MES_diff_df %>%
filter(metabolite_id != "o2_medium") %>%
slice_head(n = 10)
metabolite_names <- c("Cholate", "Glutathione", "Adenosine", "Glycerol",
"Butyrate", "Urea", "Threonine", "Asparagine",
"Tryptophan", "Arabinose")
top10_MESCRC_bar <- ggplot(top10_MES_CRC,
aes(reorder(x = metabolite_name_x, -MES_diff),
y = -MES_diff)) +
geom_col(fill = 'maroon') +
labs(x = "Metabolite",
y = "MES Difference",
title = "CRC") +
scale_x_discrete(labels = metabolite_names) +
scale_y_continuous(expand = expansion(mult = c(0, 0.05))) +
theme_bw() +
theme(axis.text.x = element_text(angle = 30, vjust = 1, hjust=1),
axis.text = element_text(size = 16),
axis.title = element_blank(),
title = element_text(size = 18)
)
top10_MESCRC_bar
top10_MES_healthy <- MES_diff_df %>%
slice_tail(n = 10)
metabolite_names1 <- c("NANA", "MGlcn191", "MGlcn186", "GlcNAc", "Citrate",
"Methionine", "MGlcn153", "Galactosamine", "2,6-DAP",
"Deoxyguanosine")
top10_MEShealthy_bar <- ggplot(top10_MES_healthy,
aes(reorder(x = metabolite_name_x, MES_diff),
y = MES_diff)) +
geom_col(fill = 'blue') +
labs(x = "Metabolite",
y = "MES Difference",
title = "Healthy") +
scale_x_discrete(labels = metabolite_names1) +
scale_y_continuous(expand = expansion(mult = c(0, 0.05))) +
theme_bw() +
theme(axis.text.x = element_text(angle = 30, vjust = 1, hjust=1),
axis.text = element_text(size = 16),
axis.title = element_blank(),
title = element_text(size = 18)
)
top10_MEShealthy_bar
plot <- grid.arrange(top10_MESCRC_bar, top10_MEShealthy_bar,
left = textGrob("MES Difference", rot = 90, gp = gpar(fontsize = 20)),
bottom = textGrob("Metabolite", gp = gpar(fontsize = 20)))
plot
###############
# density plot
##############
# plot the density of MES scores for
# CRC vs healthy
View(MES_diff_df)
density_plot <- ggplot(MES_diff_df, aes(MES_health)) +
geom_density()
desnity_plot
density_plot <- ggplot(MES_diff_df, aes(MES_health)) +
geom_density()
density_plot
density_plot <- ggplot(MES_diff_df, aes(MES_health)) +
geom_density(fill="#69b3a2", color="#e9ecef")
density_plot
density_plot <- ggplot(MES_diff_df, aes(MES_health)) +
geom_density(fill="#69b3a2", color="#e9ecef")
+ theme_bw()
density_plot <- ggplot(MES_diff_df, aes(MES_health)) +
geom_density(fill="#69b3a2", color="#e9ecef") +
theme_bw()
density_plot
density_plot <- ggplot(MES_diff_df, aes(x = MES_health)) +
geom_density(fill="#69b3a2", color="#e9ecef") +
theme_bw()
density_plot
density_plot <- ggplot(MES_diff_df, aes(x = MES_health)) +
geom_density(fill="#69b3a2", color="#e9ecef") +
scale_x_continuous(n.breaks = 10)
theme_bw()
density_plot
density_plot <- ggplot(MES_diff_df, aes(x = MES_health)) +
geom_density(fill="#69b3a2", color="#e9ecef") +
scale_x_continuous(n.breaks = 10) +
theme_bw()
density_plot
density_plot <- ggplot(MES_diff_df, aes(x = MES_health)) +
geom_density(fill="#69b3a2", color="#e9ecef") +
scale_x_continuous(n.breaks = 8) +
theme_bw()
density_plot
density_plot <- ggplot(MES_diff_df, aes(x = MES_health)) +
geom_density(fill="#69b3a2", color="#e9ecef") +
scale_x_continuous(n.breaks = 10) +
theme_bw()
density_plot
density_plot <- ggplot(MES_diff_df, aes(x = MES_health)) +
geom_density(fill="#69b3a2", color="#e9ecef") +
scale_x_continuous(n.breaks = 8) +
theme_bw()
density_plot
View(MES_diff_df)
density_plot <- ggplot(MES_diff_df, aes(x = MES_health, MES_CRC)) +
geom_density(fill="#69b3a2", color="#e9ecef") +
scale_x_continuous(n.breaks = 8) +
theme_bw()
density_plot
density_plot <- ggplot(MES_diff_df, aes(x = MES_health)) +
geom_density(fill="#69b3a2", color="#e9ecef") +
scale_x_continuous(n.breaks = 8) +
theme_bw()
density_plot
compare_MES_df <- MES_diff_df %>%
pivot_longer(c(MES_health, MES_CRC))
View(compare_MES_df)
density_plot <- ggplot(MES_diff_df, aes(x = value, fill = name)) +
geom_density() +
scale_x_continuous(n.breaks = 8) +
theme_bw()
density_plot
density_plot <- ggplot(compare_MES_df, aes(x = value, fill = name)) +
geom_density() +
scale_x_continuous(n.breaks = 8) +
theme_bw()
density_plot
compare_MES_df <- MES_diff_df %>%
pivot_longer(c(MES_health, MES_CRC))
density_plot <- ggplot(compare_MES_df, aes(x = value, fill = name)) +
geom_density(alpha = 0.3) +
scale_x_continuous(n.breaks = 8) +
theme_bw()
density_plot
compare_MES_df <- MES_diff_df %>%
pivot_longer(c(MES_health, MES_CRC))
density_plot <- ggplot(compare_MES_df, aes(x = value
, color = name
, fill = name)) +
geom_density(alpha = 0.3) +
scale_x_continuous(n.breaks = 8) +
theme_bw()
density_plot
density_plot <- ggplot(compare_MES_df, aes(x = value
, color = name
, fill = name)) +
labs(x = "Metabolic Exchange Score (MES)",
y = "Density",
fill = "Condition") +
geom_density(alpha = 0.3) +
scale_x_continuous(n.breaks = 8) +
theme_bw()
density_plot
density_plot <- ggplot(compare_MES_df, aes(x = value
, color = name
, fill = name)) +
labs(x = "Metabolic Exchange Score (MES)",
y = "Density",
fill = "Condition",
color = "Condition") +
geom_density(alpha = 0.3) +
scale_x_continuous(n.breaks = 8) +
theme_bw()
density_plot
density_plot <- ggplot(compare_MES_df, aes(x = value
, color = name
, fill = name)) +
labs(x = "Metabolic Exchange Score (MES)",
y = "Density",
fill = "Condition",
color = "Condition") +
geom_density(alpha = 0.3) +
scale_x_continuous(n.breaks = 8) +
theme_bw() +
theme(axis.text = element_text(size = 16),
axis.title = element_text(size = 18))
density_plot
density_plot <- ggplot(compare_MES_df, aes(x = value
, color = name
, fill = name)) +
labs(x = "Metabolic Exchange Score (MES)",
y = "Density",
fill = "Condition",
color = "Condition") +
geom_density(alpha = 0.3) +
scale_x_continuous(n.breaks = 8) +
theme_bw() +
theme(axis.text = element_text(size = 16),
axis.title = element_text(size = 18),
legend.text = element_text(size = 16),
legend.title = element_text(size = 18),
legend.position = (c(0.8, 0.6)))
density_plot
density_plot <- ggplot(compare_MES_df, aes(x = value
, color = name
, fill = name)) +
labs(x = "Metabolic Exchange Score (MES)",
y = "Density",
fill = "Condition",
color = "Condition") +
geom_density(alpha = 0.3) +
scale_fill_discrete(labels = "CRC", "Healthy")
scale_x_continuous(n.breaks = 8) +
theme_bw() +
theme(axis.text = element_text(size = 16),
axis.title = element_text(size = 18),
legend.text = element_text(size = 16),
legend.title = element_text(size = 18),
legend.position = (c(0.8, 0.6)))
density_plot <- ggplot(compare_MES_df, aes(x = value
, color = name
, fill = name)) +
labs(x = "Metabolic Exchange Score (MES)",
y = "Density",
fill = "Condition",
color = "Condition") +
geom_density(alpha = 0.3) +
scale_fill_discrete(labels = c("CRC", "Healthy"))
scale_x_continuous(n.breaks = 8) +
theme_bw() +
theme(axis.text = element_text(size = 16),
axis.title = element_text(size = 18),
legend.text = element_text(size = 16),
legend.title = element_text(size = 18),
legend.position = (c(0.8, 0.6)))
density_plot <- ggplot(compare_MES_df, aes(x = value
, color = name
, fill = name)) +
labs(x = "Metabolic Exchange Score (MES)",
y = "Density",
fill = "Condition",
color = "Condition") +
geom_density(alpha = 0.3) +
scale_fill_discrete(labels = c("CRC", "Healthy")) +
scale_x_continuous(n.breaks = 8) +
theme_bw() +
theme(axis.text = element_text(size = 16),
axis.title = element_text(size = 18),
legend.text = element_text(size = 16),
legend.title = element_text(size = 18),
legend.position = (c(0.8, 0.6)))
density_plot
density_plot <- ggplot(compare_MES_df, aes(x = value
, color = name
, fill = name)) +
labs(x = "Metabolic Exchange Score (MES)",
y = "Density",
fill = "Condition",
color = "Condition") +
geom_density(alpha = 0.3) +
scale_fill_discrete(labels = c("CRC", "Healthy")) +
scale_color_discrete(labels = c("CRC", "Healthy")) +
scale_x_continuous(n.breaks = 8) +
theme_bw() +
theme(axis.text = element_text(size = 16),
axis.title = element_text(size = 18),
legend.text = element_text(size = 16),
legend.title = element_text(size = 18),
legend.position = (c(0.8, 0.6)))
density_plot
density_plot <- ggplot(compare_MES_df, aes(x = value
, color = name
, fill = name)) +
labs(x = "Metabolic Exchange Score (MES)",
y = "Density",
fill = "Condition",
color = "Condition") +
geom_density(alpha = 0.3) +
scale_fill_discrete(labels = c("CRC", "Healthy")) +
scale_color_discrete(labels = c("CRC", "Healthy")) +
scale_x_continuous(n.breaks = 8) +
scale_y_continuous(expand = expansion(mult = c(0, 0.05)))
theme_bw() +
theme(axis.text = element_text(size = 16),
axis.title = element_text(size = 18),
legend.text = element_text(size = 16),
legend.title = element_text(size = 18),
legend.position = (c(0.8, 0.6)))
density_plot
density_plot <- ggplot(compare_MES_df, aes(x = value
, color = name
, fill = name)) +
labs(x = "Metabolic Exchange Score (MES)",
y = "Density",
fill = "Condition",
color = "Condition") +
geom_density(alpha = 0.3) +
scale_fill_discrete(labels = c("CRC", "Healthy")) +
scale_color_discrete(labels = c("CRC", "Healthy")) +
scale_x_continuous(n.breaks = 8) +
scale_y_continuous(expand = expansion(mult = c(0, 0.05))) +
theme_bw() +
theme(axis.text = element_text(size = 16),
axis.title = element_text(size = 18),
legend.text = element_text(size = 16),
legend.title = element_text(size = 18),
legend.position = (c(0.8, 0.6)))
density_plot
